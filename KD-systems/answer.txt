1. В чем разница между списком и словарем в Python?

Список (list): элементы хранятся в виде последовательности. Обращение происходит по индексу. Упорядоченный тип данных. Пустой список можно создать: [] или list().

Словарь (dict): элементы хранятся в виде пар "ключ-значение". Обращение происходит по ключам. Неупорядоченный тип данных. Ключи хэшируются. Создать пустой словарь можно: {} или dict().



2. Как объединить несколько строк в Python?

Пусть даны две строки - s1 и s2.
Для объединения можно:

- Воспользоваться конкатенацией строк с помощью оператора '+':
s3 = s1 + s2

- Воспользоваться конкатенацией строк с помощью функции join(), перед этим создав список из строк:
s3 = ''.join([s1, s2])

- Воспользоваться конкатенацией с помощью оператора '%':
s3 = '%s%s' % (s1, s2)

- Воспользоваться f-строкой:
s3 = f'{s1}{s2}''

- Воспользоваться функцией format():
s3 = '{}{}'.format(s1, s2)



3. Зачем использовать оператор pass в Python?

Оператор pass выступает в качестве "заглушки", позволяющей не писать код. Например, мы создали функцию, но пока не знаем как или не хотим заполнять её кодом. Воспользуемся оператором pass.

def function():
    pass



4. Зачем нужны срезы в Python?

Срезы (slices) item[START:STOP:STEP] - позволяют получить подмножество элементов итерируемого объекта.


5. Что такое лямбда-выражение в Python?

Лямбда-выражения или лямбда-функция (lambda <аргумент (один или несколько)>: <выражение>) - это анонимная функция. Используется однократно, также позволяет сократить код. Часто используется с такими встроенными функциями, как map(), filter(), max(), min(), sorted() и т.д. Принимает неограниченное количество аргументов, но не может содержать более одного выражения. Не содержат return, pass, raise, assert.



6. В чем разница между списковыми методами append() и extend() в Python?

Метод append() принимает в качестве аргумента один элемент и добавляет его в конец списка. Метод extend() принимает в качестве аргументы итерируемую последовательность и добавляет её элементы также в конец списка.
Например:

l1 = [1, 2]
l2 = [3, 4]
l1.append(l2) -> l1 = [1, 2, [3, 4]]
l1.extend(l2) -> l1 = [1, 2, 3, 4]



??? 7. Что такое модули Python? Назовите некоторые наиболее часто используемые встроенные модули в Python.

Модуль - это отдельный файл с кодом на Python с расширением .py. Модули можно импортировать и использовать многократно.

- os - позволяет работать с ОС
- sys - позволяет работать с интерпретатором python
- json - позволяет работать с форматом json - кодировать, декодировать данные
- pickle - позволяет сохранять и загружать сложные объекты
- datetime - позволяет работать с датой и временем
- time - позволяет работать с датой и временем
- random - позволяет генерировать случайные элементы или последовательности
- re - позволяет работать с регулярными выражениями
- math - позволяет работать с математическими функции



8. Объясните, что означает "self" в Python.

"self" - это ссылка на текущий объект. Используется для представления экземпляра класса. Благодаря ему можно обратиться к атрибутам и методам объекта внутри класса. Вместе "self" можно использовать любое другое обозначение, но принято именно "self".



9. Чем отличается while от for?

Цикл for выполняется заранее известное число раз, в то время как while совершается до тех пор, пока не выполнится определенное условие.



10. Какие методы списков?

- list.append(x) - добавляет элемент в конец списка
- list.extend(L) - расширяет список list, добавляя в конец все элементы списка L
- list.insert(i, x) - вставляет на i-ый элемент значение x
- list.remove(x) - удаляет первый элемент в списке, имеющий значение x. ValueError, если такого элемента не существует
- list.pop([i]) - удаляет i-ый элемент и возвращает его. Если индекс не указан, удаляется последний элемент
- list.index(x, [start [, end]]) - возвращает положение первого элемента со значением x (при этом поиск ведется от start до end)
- list.count(x) - возвращает количество элементов со значением x
- list.sort([key=функция]) - сортирует список на основе функции
- list.reverse() - разворачивает список
- list.copy() - поверхностная копия списка
- list.clear() - очищает список



??? 11. Как можно обратить (reverse) порядок элементов в списке?

Можно воспользоваться срезами - list[::-1], методом списков - list.reverse(), встроенной функцией - reversed(list).



12. Как убрать из списка дубликат элемента?

- Пройтись циклом по списку и добавлять в новый список только те элементы, которых ещё не было.
- Преобразовать список в множество (set).
- Воспользоваться функцией fromkeys() словаря.



??? 13. Какие есть методы HTTP-запросов и какая между ними разница?

- GET - запрашивает ресурс. Метод позволяет только извлекать данные.
- HEAD - запрашивает ресурс, но не возвращает тело ответа (в отличие от метода GET).
- POST - используется для отправки данных на сервер.
- PUT - используется для изменения ресурсов на сервере.
- PATCH - используется для внесения частичных изменений в указанный ресурс.
- DELETE - используется для удаления указанного ресурса.
- OPTIONS - используется для запроса информации о сервере.

Также есть методы TRACE и CONNECT.



??? 14. Как выглядит HTTP-request / response?

HTTP-запросы и ответы состоят из:

- Стартовой строки, описывающей запрос или статус.
- HTTP заголовков, определяющих запрос или описывающих тело сообщения.
- Пустой строки, указывающей, что вся мета информация отправлена.
- Произвольного тела, содержащего пересылаемые с запросом данные или отправляемый в ответ документ. Наличие тела и его размер определяется стартовой строкой и заголовками HTTP.



??? 15. Что такое API?

API - это способ взаимодействия нескольких программных компонентов по определенным правилам. Обычно рассматривают на примере клиент-серверных приложений. API выступает посредником между клиентом и сервером, позволяя им взаимодействовать друг с другом.
